3.1.11 (Brainy Betty)
77c479240b27e28f77813fb2a5017cc40bf3e30c
o:Sass::Tree::RootNode
:@template"¤ @import "shared";

// CSS Transitions
// Currently only works in Webkit.
//
// * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
// * We'll be prepared.
//
// Including this submodule sets following defaults for the mixins:
//
//     $default-transition-property : all
//     $default-transition-duration : 1s
//     $default-transition-function : false
//     $default-transition-delay    : false
//
// Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s).

$default-transition-property: all !default;

$default-transition-duration: 1s !default;

$default-transition-function: false !default;

$default-transition-delay: false !default;

$transitionable-prefixed-values: transform, transform-origin !default;

// One or more properties to transition
//
// * for multiple, use a comma-delimited list
// * also accepts "all" or "none"

@mixin transition-property($property-1: $default-transition-property,
  $property-2 : false,
  $property-3 : false,
  $property-4 : false,
  $property-5 : false,
  $property-6 : false,
  $property-7 : false,
  $property-8 : false,
  $property-9 : false,
  $property-10: false
) {
  @if type-of($property-1) == string { $property-1: unquote($property-1); }
  $properties: compact($property-1, $property-2, $property-3, $property-4, $property-5, $property-6, $property-7, $property-8, $property-9, $property-10);
  @if $experimental-support-for-webkit    {       -webkit-transition-property : prefixed-for-transition(-webkit, $properties); }
  @if $experimental-support-for-mozilla   {          -moz-transition-property : prefixed-for-transition(-moz,    $properties); }
  @if $experimental-support-for-opera     {            -o-transition-property : prefixed-for-transition(-o,      $properties); }
                                                          transition-property : $properties;
}

// One or more durations in seconds
//
// * for multiple, use a comma-delimited list
// * these durations will affect the properties in the same list position

@mixin transition-duration($duration-1: $default-transition-duration,
  $duration-2 : false,
  $duration-3 : false,
  $duration-4 : false,
  $duration-5 : false,
  $duration-6 : false,
  $duration-7 : false,
  $duration-8 : false,
  $duration-9 : false,
  $duration-10: false
) {
  @if type-of($duration-1) == string { $duration-1: unquote($duration-1); }
  $durations: compact($duration-1, $duration-2, $duration-3, $duration-4, $duration-5, $duration-6, $duration-7, $duration-8, $duration-9, $duration-10);
  @include experimental(transition-duration, $durations,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more timing functions
//
// * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
// * For multiple, use a comma-delimited list
// * These functions will effect the properties in the same list position

@mixin transition-timing-function($function-1: $default-transition-function,
  $function-2 : false,
  $function-3 : false,
  $function-4 : false,
  $function-5 : false,
  $function-6 : false,
  $function-7 : false,
  $function-8 : false,
  $function-9 : false,
  $function-10: false
) {
  $function-1: unquote($function-1);
  $functions: compact($function-1, $function-2, $function-3, $function-4, $function-5, $function-6, $function-7, $function-8, $function-9, $function-10);
  @include experimental(transition-timing-function, $functions,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// One or more transition-delays in seconds
//
// * for multiple, use a comma-delimited list
// * these delays will effect the properties in the same list position

@mixin transition-delay($delay-1: $default-transition-delay,
  $delay-2 : false,
  $delay-3 : false,
  $delay-4 : false,
  $delay-5 : false,
  $delay-6 : false,
  $delay-7 : false,
  $delay-8 : false,
  $delay-9 : false,
  $delay-10: false
) {
  @if type-of($delay-1) == string { $delay-1: unquote($delay-1); }
  $delays: compact($delay-1, $delay-2, $delay-3, $delay-4, $delay-5, $delay-6, $delay-7, $delay-8, $delay-9, $delay-10);
  @include experimental(transition-delay, $delays,
    -moz, -webkit, -o, not -ms, not -khtml, official
  );
}

// Transition all-in-one shorthand

@mixin single-transition(
  $property: $default-transition-property,
  $duration: $default-transition-duration,
  $function: $default-transition-function,
  $delay: $default-transition-delay
) {
  @include transition(compact($property $duration $function $delay));
}

@mixin transition(
  $transition-1 : default,
  $transition-2 : false,
  $transition-3 : false,
  $transition-4 : false,
  $transition-5 : false,
  $transition-6 : false,
  $transition-7 : false,
  $transition-8 : false,
  $transition-9 : false,
  $transition-10: false
) {
  @if $transition-1 == default {
    $transition-1 : compact($default-transition-property $default-transition-duration $default-transition-function $default-transition-delay);
  }
  $transitions: false;
  @if type-of($transition-1) == list and type-of(nth($transition-1,1)) == list {
    $transitions: join($transition-1, compact($transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10), comma);
  } @else {
    $transitions : compact($transition-1, $transition-2, $transition-3, $transition-4, $transition-5, $transition-6, $transition-7, $transition-8, $transition-9, $transition-10);
  }
  $delays: comma-list();
  $has-delays: false;
  $webkit-value: comma-list();
  $moz-value: comma-list();
  $o-value: comma-list();

  // This block can be made considerably simpler at the point in time that
  // we no longer need to deal with the differences in how delays are treated.
  @each $transition in $transitions {
    // Extract the values from the list
    // (this would be cleaner if nth took a 3rd argument to provide a default value).
    $property: nth($transition, 1);
    $duration: false;
    $timing-function: false;
    $delay: false;
    @if length($transition) > 1 { $duration:        nth($transition, 2); }
    @if length($transition) > 2 { $timing-function: nth($transition, 3); }
    @if length($transition) > 3 { $delay:           nth($transition, 4); $has-delays: true; }

    // If a delay is provided without a timing function
    @if is-time($timing-function) and not $delay { $delay: $timing-function; $timing-function: false; $has-delays: true; }

    // Keep a list of delays in case one is specified
    $delays: append($delays, if($delay, $delay, 0s));

    $webkit-value: append($webkit-value, compact(prefixed-for-transition(-webkit, $property) $duration $timing-function));
       $moz-value: append(   $moz-value, compact(prefixed-for-transition(   -moz, $property) $duration $timing-function $delay));
         $o-value: append(     $o-value, compact(prefixed-for-transition(     -o, $property) $duration $timing-function $delay));
  }

  @if $experimental-support-for-webkit    {       -webkit-transition : $webkit-value;
    // old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it.
    @if $has-delays                       { -webkit-transition-delay : $delays;       } }
  @if $experimental-support-for-mozilla   {          -moz-transition : $moz-value;    }
  @if $experimental-support-for-opera     {            -o-transition : $o-value;      }
                                                          transition : $transitions;
}

// coerce a list to be comma delimited or make a new, empty comma delimited list.
@function comma-list($list: ()) {
  @return join((), $list, comma);
}

// Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`.
@function prefixed-for-transition($prefix, $property) {
  @if type-of($property) == list {
    $new-list: comma-list();
    @each $v in $property {
      $new-list: append($new-list, prefixed-for-transition($prefix, $v));
    }
    @return $new-list;
  } @else {
    @if index($transitionable-prefixed-values, $property) {
      @return #{$prefix}-#{$property};
    } @else {
      @return $property;
    }
  }
}

// Checks if the value given is a unit of time.
@function is-time($value) {
  @if type-of($value) == number {
    @return not not index(s ms, unit($value));
  } @else {
    @return false;
  }
}
:@has_childrenT:@options{ :
@linei:@children[o:Sass::Tree::ImportNode
;0;@:@imported_filename"shared;	i;
[ o:Sass::Tree::CommentNode;@:
@loud0:@value["ï/* CSS Transitions
 * Currently only works in Webkit.
 *
 * * expected in CSS3, FireFox 3.6/7 and Opera Presto 2.3
 * * We'll be prepared.
 *
 * Including this submodule sets following defaults for the mixins:
 *
 *     $default-transition-property : all
 *     $default-transition-duration : 1s
 *     $default-transition-function : false
 *     $default-transition-delay    : false
 *
 * Override them if you like. Timing-function and delay are set to false for browser defaults (ease, 0s). */:@silenti ;	i;
[ o:Sass::Tree::VariableNode:
@name" default-transition-property;@:@guarded"!default;	i;
[ :
@expro:Sass::Script::String	:
@type:identifier;@;"all;	io;;" default-transition-duration;@;"!default;	i;
[ ;o:Sass::Script::Number:@numerator_units["s;@;i:@original"1s:@denominator_units[ ;	io;;" default-transition-function;@;"!default;	i;
[ ;o:Sass::Script::Bool;@;F;	io;;"default-transition-delay;@;"!default;	i;
[ ;o;;@;F;	io;;"#transitionable-prefixed-values;@;"!default;	i;
[ ;o:Sass::Script::List	;@;[o;	;;;@;"transform;	io;	;;;@;"transform-origin;	i:@separator:
comma;	io;;@;0;["}/* One or more properties to transition
 *
 * * for multiple, use a comma-delimited list
 * * also accepts "all" or "none" */;i ;	i!;
[ o:Sass::Tree::MixinDefNode;"transition-property;T;@;	i0;
[u:Sass::Tree::IfNodeÍ[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"string:
@linei1:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@;i1:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;@;i1;@;i10[o:Sass::Tree::VariableNode;"property-1;@:@guarded0;i1:@children[ :
@expro;
;"unquote;{ ;@;i1;[o;	;"property_1;"property-1;@;i1o;;"properties;@;0;	i2;
[ ;o:Sass::Script::Funcall
;"compact:@keywords{ ;@;	i2:
@args[o:Sass::Script::Variable	:@underscored_name"property_1;"property-1;@;	i2o;%	;&"property_2;"property-2;@;	i2o;%	;&"property_3;"property-3;@;	i2o;%	;&"property_4;"property-4;@;	i2o;%	;&"property_5;"property-5;@;	i2o;%	;&"property_6;"property-6;@;	i2o;%	;&"property_7;"property-7;@;	i2o;%	;&"property_8;"property-8;@;	i2o;%	;&"property_9;"property-9;@;	i2o;%	;&"property_10;"property-10;@;	i2u;!¼[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei30[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;[" -webkit-transition-property;@	:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ ;@	;	i3:
@args[o:Sass::Script::String	:
@type:identifier;@	;"-webkit;	i3o; 	;"properties;"properties;@	;	i3;	i3:@children[ u;!¸[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei40[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-moz-transition-property;@	:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ ;@	;	i4:
@args[o:Sass::Script::String	:
@type:identifier;@	;"	-moz;	i4o; 	;"properties;"properties;@	;	i4;	i4:@children[ u;!°[o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei50[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-o-transition-property;@	:@valueo:Sass::Script::Funcall
;"prefixed-for-transition:@keywords{ ;@	;	i5:
@args[o:Sass::Script::String	:
@type:identifier;@	;"-o;	i5o; 	;"properties;"properties;@	;	i5;	i5:@children[ o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["transition-property;@;o;%	;&"properties;"properties;@;	i6;	i6;
[ ;$[[o;%;&"property_1;"property-1;@o;%	;&" default_transition_property;" default-transition-property;@;	i&[o;%;&"property_2;"property-2;@o;;@;F;	i'[o;%;&"property_3;"property-3;@o;;@;F;	i([o;%;&"property_4;"property-4;@o;;@;F;	i)[o;%;&"property_5;"property-5;@o;;@;F;	i*[o;%;&"property_6;"property-6;@o;;@;F;	i+[o;%;&"property_7;"property-7;@o;;@;F;	i,[o;%;&"property_8;"property-8;@o;;@;F;	i-[o;%;&"property_9;"property-9;@o;;@;F;	i.[o;%;&"property_10;"property-10;@o;;@;F;	i/o;;@;0;["¡/* One or more durations in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these durations will affect the properties in the same list position */;i ;	i9;
[ o; ;"transition-duration;T;@;	iH;
[u;!Í[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"string:
@lineiI:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@;iI:
@args[o:Sass::Script::Variable	:@underscored_name"duration_1;"duration-1;@;iI;@;iI0[o:Sass::Tree::VariableNode;"duration-1;@:@guarded0;iI:@children[ :
@expro;
;"unquote;{ ;@;iI;[o;	;"duration_1;"duration-1;@;iIo;;"durations;@;0;	iJ;
[ ;o;"
;"compact;#{ ;@;	iJ;$[o;%	;&"duration_1;"duration-1;@;	iJo;%	;&"duration_2;"duration-2;@;	iJo;%	;&"duration_3;"duration-3;@;	iJo;%	;&"duration_4;"duration-4;@;	iJo;%	;&"duration_5;"duration-5;@;	iJo;%	;&"duration_6;"duration-6;@;	iJo;%	;&"duration_7;"duration-7;@;	iJo;%	;&"duration_8;"duration-8;@;	iJo;%	;&"duration_9;"duration-9;@;	iJo;%	;&"duration_10;"duration-10;@;	iJo:Sass::Tree::MixinNode;"experimental;#{ ;@;	iM;
[ ;$[o;	;;;@;"transition-duration;	iKo;%	;&"durations;"durations;@;	iKo;	;;;@;"	-moz;	iLo;	;;;@;"-webkit;	iLo;	;;;@;"-o;	iLo:!Sass::Script::UnaryOperation	:@operator:not:@operando;	;;;@;"-ms;	iL;@;	iLo;,	;-;.;/o;	;;;@;"-khtml;	iL;@;	iLo;	;;;@;"official;	iL;$[[o;%;&"duration_1;"duration-1;@o;%	;&" default_transition_duration;" default-transition-duration;@;	i>[o;%;&"duration_2;"duration-2;@o;;@;F;	i?[o;%;&"duration_3;"duration-3;@o;;@;F;	i@[o;%;&"duration_4;"duration-4;@o;;@;F;	iA[o;%;&"duration_5;"duration-5;@o;;@;F;	iB[o;%;&"duration_6;"duration-6;@o;;@;F;	iC[o;%;&"duration_7;"duration-7;@o;;@;F;	iD[o;%;&"duration_8;"duration-8;@o;;@;F;	iE[o;%;&"duration_9;"duration-9;@o;;@;F;	iF[o;%;&"duration_10;"duration-10;@o;;@;F;	iGo;;@;0;["õ/* One or more timing functions
 *
 * * [ ease | linear | ease-in | ease-out | ease-in-out | cubic-bezier(x1, y1, x2, y2)]
 * * For multiple, use a comma-delimited list
 * * These functions will effect the properties in the same list position */;i ;	iP;
[ o; ;"transition-timing-function;T;@;	i`;
[o;;"function-1;@;0;	ia;
[ ;o;"
;"unquote;#{ ;@;	ia;$[o;%	;&"function_1;"function-1;@;	iao;;"functions;@;0;	ib;
[ ;o;"
;"compact;#{ ;@;	ib;$[o;%	;&"function_1;"function-1;@;	ibo;%	;&"function_2;"function-2;@;	ibo;%	;&"function_3;"function-3;@;	ibo;%	;&"function_4;"function-4;@;	ibo;%	;&"function_5;"function-5;@;	ibo;%	;&"function_6;"function-6;@;	ibo;%	;&"function_7;"function-7;@;	ibo;%	;&"function_8;"function-8;@;	ibo;%	;&"function_9;"function-9;@;	ibo;%	;&"function_10;"function-10;@;	ibo;+;"experimental;#{ ;@;	ie;
[ ;$[o;	;;;@;"transition-timing-function;	ico;%	;&"functions;"functions;@;	ico;	;;;@;"	-moz;	ido;	;;;@;"-webkit;	ido;	;;;@;"-o;	ido;,	;-;.;/o;	;;;@;"-ms;	id;@;	ido;,	;-;.;/o;	;;;@;"-khtml;	id;@;	ido;	;;;@;"official;	id;$[[o;%;&"function_1;"function-1;@o;%	;&" default_transition_function;" default-transition-function;@;	iV[o;%;&"function_2;"function-2;@o;;@;F;	iW[o;%;&"function_3;"function-3;@o;;@;F;	iX[o;%;&"function_4;"function-4;@o;;@;F;	iY[o;%;&"function_5;"function-5;@o;;@;F;	iZ[o;%;&"function_6;"function-6;@o;;@;F;	i[[o;%;&"function_7;"function-7;@o;;@;F;	i\[o;%;&"function_8;"function-8;@o;;@;F;	i][o;%;&"function_9;"function-9;@o;;@;F;	i^[o;%;&"function_10;"function-10;@o;;@;F;	i_o;;@;0;["¦/* One or more transition-delays in seconds
 *
 * * for multiple, use a comma-delimited list
 * * these delays will effect the properties in the same list position */;i ;	ih;
[ o; ;"transition-delay;T;@;	iw;
[u;!¾[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"string:
@lineix:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@;ix:
@args[o:Sass::Script::Variable	:@underscored_name"delay_1;"delay-1;@;ix;@;ix0[o:Sass::Tree::VariableNode;"delay-1;@:@guarded0;ix:@children[ :
@expro;
;"unquote;{ ;@;ix;[o;	;"delay_1;"delay-1;@;ixo;;"delays;@;0;	iy;
[ ;o;"
;"compact;#{ ;@;	iy;$[o;%	;&"delay_1;"delay-1;@;	iyo;%	;&"delay_2;"delay-2;@;	iyo;%	;&"delay_3;"delay-3;@;	iyo;%	;&"delay_4;"delay-4;@;	iyo;%	;&"delay_5;"delay-5;@;	iyo;%	;&"delay_6;"delay-6;@;	iyo;%	;&"delay_7;"delay-7;@;	iyo;%	;&"delay_8;"delay-8;@;	iyo;%	;&"delay_9;"delay-9;@;	iyo;%	;&"delay_10;"delay-10;@;	iyo;+;"experimental;#{ ;@;	i|;
[ ;$[o;	;;;@;"transition-delay;	izo;%	;&"delays;"delays;@;	izo;	;;;@;"	-moz;	i{o;	;;;@;"-webkit;	i{o;	;;;@;"-o;	i{o;,	;-;.;/o;	;;;@;"-ms;	i{;@;	i{o;,	;-;.;/o;	;;;@;"-khtml;	i{;@;	i{o;	;;;@;"official;	i{;$[[o;%;&"delay_1;"delay-1;@o;%	;&"default_transition_delay;"default-transition-delay;@;	im[o;%;&"delay_2;"delay-2;@o;;@;F;	in[o;%;&"delay_3;"delay-3;@o;;@;F;	io[o;%;&"delay_4;"delay-4;@o;;@;F;	ip[o;%;&"delay_5;"delay-5;@o;;@;F;	iq[o;%;&"delay_6;"delay-6;@o;;@;F;	ir[o;%;&"delay_7;"delay-7;@o;;@;F;	is[o;%;&"delay_8;"delay-8;@o;;@;F;	it[o;%;&"delay_9;"delay-9;@o;;@;F;	iu[o;%;&"delay_10;"delay-10;@o;;@;F;	ivo;;@;0;["*/* Transition all-in-one shorthand */;i ;	i;
[ o; ;"single-transition;T;@;	i;
[o;+;"transition;#{ ;@;	i;
[ ;$[o;"
;"compact;#{ ;@;	i;$[o;	;@;[	o;%	;&"property;"property;@;	io;%	;&"duration;"duration;@;	io;%	;&"function;"function;@;	io;%	;&"
delay;"
delay;@;	i;:
space;	i;$[	[o;%;&"property;"property;@o;%	;&" default_transition_property;" default-transition-property;@;	i}[o;%;&"duration;"duration;@o;%	;&" default_transition_duration;" default-transition-duration;@;	i~[o;%;&"function;"function;@o;%	;&" default_transition_function;" default-transition-function;@;	i[o;%;&"
delay;"
delay;@o;%	;&"default_transition_delay;"default-transition-delay;@;	io; ;"transition;T;@;	i;
[u;!î[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"default:
@linei:@operand1o:Sass::Script::Variable	:@underscored_name"transition_1:
@name"transition-1;@;i;@;i0[o:Sass::Tree::VariableNode;"transition-1;@:@guarded0;i:@children[ :
@expro:Sass::Script::Funcall
;"compact:@keywords{ ;@;i:
@args[o:Sass::Script::List	;@;[	o;	;" default_transition_property;" default-transition-property;@;io;	;" default_transition_duration;" default-transition-duration;@;io;	;" default_transition_function;" default-transition-function;@;io;	;"default_transition_delay;"default-transition-delay;@;i:@separator:
space;io;;"transitions;@;0;	i;
[ ;o;;@;F;	iu;!g[o:Sass::Script::Operation
:@operator:and:@operand2o; 
;:eq;o:Sass::Script::String	:
@type:identifier:@options{ :@value"	list:
@linei:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@	;i:
@args[o;
;"nth;{ ;@	;i;[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@	;io:Sass::Script::Number:@numerator_units[ ;@	;i:@original"1:@denominator_units[ ;i;@	;i;o; 
;;	;o;
	;;;@	;"	list;i;o;
;"type-of;{ ;@	;i;[o;	;"transition_1;"transition-1;@	;i;@	;i;@	;iu:Sass::Tree::IfNode[00[o:Sass::Tree::VariableNode:
@name"transitions:@options{ :@guarded0:
@linei:@children[ :
@expro:Sass::Script::Funcall
;"compact:@keywords{ ;@	;	i:
@args[o:Sass::Script::Variable	:@underscored_name"transition_1;"transition-1;@	;	io;	;"transition_2;"transition-2;@	;	io;	;"transition_3;"transition-3;@	;	io;	;"transition_4;"transition-4;@	;	io;	;"transition_5;"transition-5;@	;	io;	;"transition_6;"transition-6;@	;	io;	;"transition_7;"transition-7;@	;	io;	;"transition_8;"transition-8;@	;	io;	;"transition_9;"transition-9;@	;	io;	;"transition_10;"transition-10;@	;	i[o:Sass::Tree::VariableNode;"transitions;@	:@guarded0;i:@children[ :
@expro;
;"	join;{ ;@	;i;[o;	;"transition_1;"transition-1;@	;io;
;"compact;{ ;@	;i;[o;	;"transition_2;"transition-2;@	;io;	;"transition_3;"transition-3;@	;io;	;"transition_4;"transition-4;@	;io;	;"transition_5;"transition-5;@	;io;	;"transition_6;"transition-6;@	;io;	;"transition_7;"transition-7;@	;io;	;"transition_8;"transition-8;@	;io;	;"transition_9;"transition-9;@	;io;	;"transition_10;"transition-10;@	;io;
	;;;@	;"
comma;io;;"delays;@;0;	i;
[ ;o;"
;"comma-list;#{ ;@;	i;$[ o;;"has-delays;@;0;	i;
[ ;o;;@;F;	io;;"webkit-value;@;0;	i;
[ ;o;"
;"comma-list;#{ ;@;	i;$[ o;;"moz-value;@;0;	i;
[ ;o;"
;"comma-list;#{ ;@;	i;$[ o;;"o-value;@;0;	i;
[ ;o;"
;"comma-list;#{ ;@;	i;$[ o;;@;0;["/* This block can be made considerably simpler at the point in time that
 * we no longer need to deal with the differences in how delays are treated. */;i ;	i ;
[ o:Sass::Tree::EachNode:
@listo;%	;&"transitions;"transitions;@;	i¢;T;@;	i¢;
[o;;@;0;["}/* Extract the values from the list
 * (this would be cleaner if nth took a 3rd argument to provide a default value). */;i ;	i£;
[ o;;"property;@;0;	i¥;
[ ;o;"
;"nth;#{ ;@;	i¥;$[o;%	;&"transition;"transition;@;	i¥o;;[ ;@;i;"1;[ ;	i¥o;;"duration;@;0;	i¦;
[ ;o;;@;F;	i¦o;;"timing-function;@;0;	i§;
[ ;o;;@;F;	i§o;;"
delay;@;0;	i¨;
[ ;o;;@;F;	i¨u;!
[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@numerator_units[ :@options{ :@valuei:@original"1:@denominator_units[ :
@linei©:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ ;@	;i©:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@	;i©;@	;i©0[o:Sass::Tree::VariableNode;"duration;@	:@guarded0;i©:@children[ :
@expro;
;"nth;{ ;@	;i©;[o;	;"transition;"transition;@	;i©o;	;
[ ;@	;i;"2;@;i©u;![o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@numerator_units[ :@options{ :@valuei:@original"2:@denominator_units[ :
@lineiª:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ ;@	;iª:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@	;iª;@	;iª0[o:Sass::Tree::VariableNode;"timing-function;@	:@guarded0;iª:@children[ :
@expro;
;"nth;{ ;@	;iª;[o;	;"transition;"transition;@	;iªo;	;
[ ;@	;i;"3;@;iªu;!M[o:Sass::Script::Operation
:@operator:gt:@operand2o:Sass::Script::Number:@numerator_units[ :@options{ :@valuei:@original"3:@denominator_units[ :
@linei«:@operand1o:Sass::Script::Funcall
:
@name"length:@keywords{ ;@	;i«:
@args[o:Sass::Script::Variable	:@underscored_name"transition;"transition;@	;i«;@	;i«0[o:Sass::Tree::VariableNode;"
delay;@	:@guarded0;i«:@children[ :
@expro;
;"nth;{ ;@	;i«;[o;	;"transition;"transition;@	;i«o;	;
[ ;@	;i	;"4;@;i«o;;"has-delays;@	;0;i«;[ ;o:Sass::Script::Bool;@	;T;i«o;;@;0;[";/* If a delay is provided without a timing function */;i ;	i­;
[ u;!^[o:Sass::Script::Operation
:@operator:and:@operand2o:!Sass::Script::UnaryOperation	;:not:@operando:Sass::Script::Variable	:@underscored_name"
delay:
@name"
delay:@options{ :
@linei®;@;i®:@operand1o:Sass::Script::Funcall
;"is-time:@keywords{ ;@;i®:
@args[o;	;"timing_function;"timing-function;@;i®;@;i®0[o:Sass::Tree::VariableNode;"
delay;@:@guarded0;i®:@children[ :
@expro;	;"timing_function;"timing-function;@;i®o;;"timing-function;@;0;i®;[ ;o:Sass::Script::Bool;@:@valueF;i®o;;"has-delays;@;0;i®;[ ;o;;@;T;i®o;;@;0;["9/* Keep a list of delays in case one is specified */;i ;	i°;
[ o;;"delays;@;0;	i±;
[ ;o;"
;"append;#{ ;@;	i±;$[o;%	;&"delays;"delays;@;	i±o;"
;"if;#{ ;@;	i±;$[o;%	;&"
delay;"
delay;@;	i±o;%	;&"
delay;"
delay;@;	i±o;;["s;@;i ;"0s;[ ;	i±o;;"webkit-value;@;0;	i³;
[ ;o;"
;"append;#{ ;@;	i³;$[o;%	;&"webkit_value;"webkit-value;@;	i³o;"
;"compact;#{ ;@;	i³;$[o;	;@;[o;"
;"prefixed-for-transition;#{ ;@;	i³;$[o;	;;;@;"-webkit;	i³o;%	;&"property;"property;@;	i³o;%	;&"duration;"duration;@;	i³o;%	;&"timing_function;"timing-function;@;	i³;;0;	i³o;;"moz-value;@;0;	i´;
[ ;o;"
;"append;#{ ;@;	i´;$[o;%	;&"moz_value;"moz-value;@;	i´o;"
;"compact;#{ ;@;	i´;$[o;	;@;[	o;"
;"prefixed-for-transition;#{ ;@;	i´;$[o;	;;;@;"	-moz;	i´o;%	;&"property;"property;@;	i´o;%	;&"duration;"duration;@;	i´o;%	;&"timing_function;"timing-function;@;	i´o;%	;&"
delay;"
delay;@;	i´;;0;	i´o;;"o-value;@;0;	iµ;
[ ;o;"
;"append;#{ ;@;	iµ;$[o;%	;&"o_value;"o-value;@;	iµo;"
;"compact;#{ ;@;	iµ;$[o;	;@;[	o;"
;"prefixed-for-transition;#{ ;@;	iµ;$[o;	;;;@;"-o;	iµo;%	;&"property;"property;@;	iµo;%	;&"duration;"duration;@;	iµo;%	;&"timing_function;"timing-function;@;	iµo;%	;&"
delay;"
delay;@;	iµ;;0;	iµ:	@var"transitionu;!á[o:Sass::Script::Variable	:@underscored_name"$experimental_support_for_webkit:
@name"$experimental-support-for-webkit:@options{ :
@linei¸0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-transition;@	:@valueo; 	;"webkit_value;"webkit-value;@	;	i¸;	i¸:@children[ o:Sass::Tree::CommentNode;@	:
@loud0;["j/* old webkit doesn't support the delay parameter in the shorthand so we progressively enhance it. */:@silenti ;	i¹;[ u:Sass::Tree::IfNodeú[o:Sass::Script::Variable	:@underscored_name"has_delays:
@name"has-delays:@options{ :
@lineiº0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-webkit-transition-delay;@	:@valueo; 	;"delays;"delays;@	;	iº;	iº:@children[ u;!#[o:Sass::Script::Variable	:@underscored_name"%experimental_support_for_mozilla:
@name"%experimental-support-for-mozilla:@options{ :
@linei»0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-moz-transition;@	:@valueo; 	;"moz_value;"moz-value;@	;	i»;	i»:@children[ u;![o:Sass::Script::Variable	:@underscored_name"#experimental_support_for_opera:
@name"#experimental-support-for-opera:@options{ :
@linei¼0[o:Sass::Tree::PropNode:@prop_syntax:new:
@tabsi ;["-o-transition;@	:@valueo; 	;"o_value;"o-value;@	;	i¼;	i¼:@children[ o;';(;);*i ;["transition;@;o;%	;&"transitions;"transitions;@;	i½;	i½;
[ ;$[[o;%;&"transition_1;"transition-1;@o;	;;;@;"default;	i[o;%;&"transition_2;"transition-2;@o;;@;F;	i[o;%;&"transition_3;"transition-3;@o;;@;F;	i[o;%;&"transition_4;"transition-4;@o;;@;F;	i[o;%;&"transition_5;"transition-5;@o;;@;F;	i[o;%;&"transition_6;"transition-6;@o;;@;F;	i[o;%;&"transition_7;"transition-7;@o;;@;F;	i[o;%;&"transition_8;"transition-8;@o;;@;F;	i[o;%;&"transition_9;"transition-9;@o;;@;F;	i[o;%;&"transition_10;"transition-10;@o;;@;F;	io;;@;0;["Y/* coerce a list to be comma delimited or make a new, empty comma delimited list. */;i ;	iÀ;
[ o:Sass::Tree::FunctionNode;"comma-list;T;@;	iÁ;
[o:Sass::Tree::ReturnNode	;@;	iÂ;
[ ;o;"
;"	join;#{ ;@;	iÂ;$[o;	;@;[ ;;0;	iÂo;%	;&"	list;"	list;@;	iÂo;	;;;@;"
comma;	iÂ;$[[o;%;&"	list;"	list;@o;	;@;[ ;;0;	iÁo;;@;0;["i/* Returns `$property` with the given prefix if it is found in `$transitionable-prefixed-values`. */;i ;	iÅ;
[ o;4;"prefixed-for-transition;T;@;	iÆ;
[u;![o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"	list:
@lineiÇ:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@;iÇ:
@args[o:Sass::Script::Variable	:@underscored_name"property;"property;@;iÇ;@;iÇu:Sass::Tree::IfNodeP[00[u:Sass::Tree::IfNode0[o:Sass::Script::Funcall
:
@name"
index:@keywords{ :@options{ :
@lineiÎ:
@args[o:Sass::Script::Variable	:@underscored_name"#transitionable_prefixed_values;"#transitionable-prefixed-values;@	;	iÎo;	;"property;"property;@	;	iÎu:Sass::Tree::IfNode[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÑ:@children[ :
@expro:Sass::Script::Variable	:@underscored_name"property:
@name"property;@;iÑ[o:Sass::Tree::ReturnNode	;@	;	iÏ:@children[ :
@expro: Sass::Script::Interpolation:@whitespace_beforei:@aftero;;0;0;@	:@originally_textF:	@mido;	;"property;"property;@	;	iÏ:@whitespace_after0;	iÏ:@beforeo;;0;0;@	;:originally_text;o:Sass::Script::String	:
@type:identifier;@	:@value"-;	iÏ;F;	iÏ;0;@	;F;o;	;"prefix;"prefix;@	;	iÏ;0;	iÏ;0[o:Sass::Tree::VariableNode;"new-list;@:@guarded0;iÈ:@children[ :
@expro;
;"comma-list;{ ;@;iÈ;[ o:Sass::Tree::EachNode:
@listo;	;"property;"property;@;iÉ:@has_childrenT;@;iÉ;[o;;"new-list;@;0;iÊ;[ ;o;
;"append;{ ;@;iÊ;[o;	;"new_list;"new-list;@;iÊo;
;"prefixed-for-transition;{ ;@;iÊ;[o;	;"prefix;"prefix;@;iÊo;	;"v;"v;@;iÊ:	@var"vo:Sass::Tree::ReturnNode	;@;iÌ;[ ;o;	;"new_list;"new-list;@;iÌ;$[[o;%;&"prefix;"prefix;@0[o;%;&"property;"property;@0o;;@;0;["7/* Checks if the value given is a unit of time. */;i ;	iÖ;
[ o;4;"is-time;T;@;	i×;
[u;!ù[o:Sass::Script::Operation
:@operator:eq:@operand2o:Sass::Script::String	:
@type:identifier:@options{ :@value"number:
@lineiØ:@operand1o:Sass::Script::Funcall
:
@name"type-of:@keywords{ ;@;iØ:
@args[o:Sass::Script::Variable	:@underscored_name"
value;"
value;@;iØ;@;iØu:Sass::Tree::IfNodey[00[o:Sass::Tree::ReturnNode	:@options{ :
@lineiÛ:@children[ :
@expro:Sass::Script::Bool;@:@valueF;iÛ[o:Sass::Tree::ReturnNode	;@;iÙ:@children[ :
@expro:!Sass::Script::UnaryOperation	;:not:@operando;	;;;o;
;"
index;{ ;@;iÙ;[o:Sass::Script::List	;@;[o;		;
;;@;"s;iÙo;		;
;;@;"ms;iÙ:@separator:
space;iÙo;
;"	unit;{ ;@;iÙ;[o;	;"
value;"
value;@;iÙ;@;iÙ;@;iÙ;$[[o;%;&"
value;"
value;@0